#! /bin/bash

# find file (ff) or find in file (fif)

function usage() {
    printf "\nusage: $0 <start from|string to find> [string to find] [find flags]\n\n"
    exit 1
}

if [ ! "$1" ];then
    usage
fi

if [ -d "$1" ]; then
    From="$1"
    String="$2"
    Find_Flags="$3"
else
    From="."
    String="$1"
    Find_Flags="$2"
fi

set -o noglob

Find_Excludes=()
Find_Excludes+=('.git')
Find_Excludes+=('.svn')

Basename=${0##*/}

Find_Exclude_Files=(.${Basename}-exclude .find-exclude)
for Find_Exclude_File in "${Find_Exclude_Files[@]}"; do
    if [ -r "${Find_Exclude_File}" ]; then
        Find_Excludes+=($(cat ${Find_Exclude_File} | grep -v "^#"))
    fi
done

let Find_Exclude_Count=0
Find_Exclude_Args=""
for Find_Exclude in "${Find_Excludes[@]}"; do
    if [ ${Find_Exclude_Count} -gt 0 ]; then
        Find_Exclude_Args+=" -and"
    fi
    Find_Exclude_Args+=" -not -iwholename */${Find_Exclude}/*"
    let Find_Exclude_Count=${Find_Exclude_Count}+1
done

if [ "${Basename}" == "ff" ] || [ "${Basename}" == "tff" ]; then
    Find_File=0 # true
else
    Find_File=1 # false
fi

if [ ${Find_File} -eq 0 ]; then
    LC_ALL=C find ${Find_Flags} "$(readlink -e "${From}")"/ ${Find_Exclude_Args} -and -name "*${String}*" #2> /dev/null
else
    LC_ALL=C find ${Find_Flags} "$(readlink -e "${From}")"/ ${Find_Exclude_Args} -type f -print0  2> /dev/null | xargs -0 -r --max-args=64 --max-procs=16 grep -Fl "${String}" 2> /dev/null
fi
