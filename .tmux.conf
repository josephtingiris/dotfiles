##
### bind-key
##

# remap primary prefix key to 'C-a'
set-option -g prefix C-a

# remap C-a C-a to send a real C-a (e.g. screen in tmux)
bind-key C-a send-prefix

# map prefix2 to 'C-q' ('C-b' conflicts with vim, 'C-l' conflicts with bash)
set-option -g prefix2 C-q

# if it's macos then export Tmux_OS=macos else export Tmux_OS=linux
if-shell "uname -s | grep -q Darwin" "set-environment -g Tmux_OS macos" "set-environment -g Tmux_OS linux"

# if it's tmux 3.0 or newer, then source $User_Dir/.tmux.conf.3.0+
if-shell "if [[ $(echo $($(ps -ho cmd -p $(ps -ho ppid -p $$ 2> /dev/null) 2> /dev/null | awk '{print $1}') -V) | egrep -e 'tmux next-3.*$|tmux 3.*$') ]]; then true; else false; fi" \
    "source-file $User_Dir/.tmux.conf.3.0+"

# if it's tmux 2.9 or newer, then source $User_Dir/.tmux.conf.2.9+
if-shell "if [[ $(echo $($(ps -ho cmd -p $(ps -ho ppid -p $$ 2> /dev/null) 2> /dev/null | awk '{print $1}') -V) | egrep -e 'tmux 2.9.*$') ]]; then true; else false; fi" \
    "source-file $User_Dir/.tmux.conf.2.9+"

# if it's tmux 2.1 or newer, then source $User_Dir/.tmux.conf.2.1+
if-shell "if [[ $(echo $($(ps -ho cmd -p $(ps -ho ppid -p $$ 2> /dev/null) 2> /dev/null | awk '{print $1}') -V) | egrep -e 'tmux 2.[1-8].*$|tmux next-2.9$') ]]; then true; else false; fi" \
    "source-file $User_Dir/.tmux.conf.2.1+"

# if it's 2.0 or older, then source $User_Dir/.tmux.conf.2.0-
if-shell "if [[ $(echo $($(ps -ho cmd -p $(ps -ho ppid -p $$ 2> /dev/null) 2> /dev/null | awk '{print $1}') -V) | egrep -e 'tmux 1.*|tmux 2.0.*$') ]]; then true; else false; fi" \
    "source-file $User_Dir/.tmux.conf.2.0-"

# Toggle sync on
bind-key Y \
    set-option -w synchronize-panes on \;\
    display-message 'Synchronize: ON'

# Toggle sync off
bind-key y \
    set-option -w synchronize-panes off \;\
    display-message 'Synchronize: OFF'

## meta (<alt>)

# switch panes using <alt>vi-keys
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
bind-key -n M-k select-pane -U
bind-key -n M-j select-pane -D

# switch panes using <alt>arrow (too)
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

## shift

# switch windows using <shift>arrow
bind-key -n S-Left last-window
bind-key -n S-Right next-window
bind-key -n S-Up next-window
bind-key -n S-Down last-window

## control

# easier and faster switching between next/prev window
bind-key C-p previous-window
bind-key C-n next-window

bind-key C-b send-keys "source $User_Dir/.bashrc" C-m \; \
    display-message "Sourced: $User_Dir/.bashrc"

# reload home directory config file
bind-key C-r source-file ~/.tmux.conf \; \
    display-message "Sourced: ~/tmux.conf"

# copy tmux's selection buffer into the X clipboard selection
bind-key C-c run-shell "tmux show-buffer | xsel -b -i" \; \
    display-message "Clipboard buffer copied to xsel ..."

# copy X clipboard selection into tmux's selection buffer
bind-key C-x run-shell "xsel -b -o | tmux load-buffer -" \; \
    display-message "Clipboard buffer copied from xsel ..."

# simple test message
#bind-key C-t display-message "Test"

##
### set-option
##

## global server options (can't unset these)

# if it exists, use /usr/local/bin/bash otherwise use /bin/bash; run the corresponding shell for default command
if-shell "[ -x /usr/local/bin/bash ]" {
    set-option -sg default-command "/usr/local/bin/bash --init-file $User_Dir/.bashrc"
} {
    set-option -sg default-command "/bin/bash --init-file $User_Dir/.bashrc"
}

# remain-on-exit; trap exit in .bashrc to tmux kill-pane -t ${TMUX_PANE} (or bind-key x)
set-option -sg remain-on-exit on

# workaround neovim 'esc' bug # https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set-option -sg escape-time 10

# do NOT automatically destroy or exit if there are no attached clients
set-option -sg destroy-unattached off
set-option -sg exit-unattached off

# turn on the clipboard
set-option -sg set-clipboard on

## global session and/or window options (can't unset these)

# tmux messages are displayed for 3 seconds
set-option -g display-time 3000

# increase scrollback buffer size
set-option -g history-limit 50000

# use vi mode keys
set-option -g mode-keys vi

# use vi status keys
set-option -g status-keys vi

# set tmux default TERM=screen-256color
set-option -g default-terminal "screen-256color"

##
### colour options
##

set-option -g display-panes-active-colour brightred
set-option -g display-panes-colour white

##
### plugins
##

# https://github.com/tmux-plugins
